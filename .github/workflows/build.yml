name: Build

on: [push, pull_request]

env:
  VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  CMAKE_OPTIONS: -Dtests=ON -Dsymbols=ON -Ddisplay-install-paths=ON
  VCPKG_COMMIT_ID: a28aae61c575c6b5b2318d3d2dd97de1e55dc049


jobs:
  skip_test:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          concurrent_skipping: same_content_newer
          skip_after_successful_duplicate: 'true'

  fetch_build_number:
    runs-on: ubuntu-latest
    outputs:
      build_number: ${{ steps.fetch.outputs.build_number }}
    steps:
      - uses: actions/checkout@v3
        with:
            fetch-depth: 1
      - id: fetch
        shell: bash
        run: |
          echo "build_number=$( '${{ github. workspace }}/scripts/mumble-build-number.py' \
            --commit ${{ github.sha }} --version $( '${{ github.workspace }}/scripts/mumble-version.py' ) \
            --password '${{ secrets.BUILD_NUMBER_TOKEN }}' --default 0 )" >> $GITHUB_OUTPUT


  build:
    needs: [ skip_test, fetch_build_number ]

    if: needs.skip_test.outputs.should_skip != 'true'

    strategy:
        fail-fast: false
        matrix:
            os: [ubuntu-22.04, windows-latest, macos-latest]
            arch: [64bit]
            type: [shared, static]
            include:
              - os: windows-latest
                vcpkgBasePath: "C:/"
                shellToUse: pwsh
              - os: macos-latest
                vcpkgBasePath: "/Users/runner/"
                shellToUse: bash
              - os: ubuntu-22.04
                vcpkgBasePath: "/opt/"
                shellToUse: bash
            
    runs-on: ${{ matrix.os }}

    permissions:
      packages: write

    steps:
    - name: Print diskspace
      run: df -h
      shell: bash


    - uses: actions/checkout@v3
      with:
          submodules: 'recursive'
          fetch-depth: 1



    - uses: actions/cache@v3
      with:
          path: '${{ matrix.vcpkgBasePath }}vcpkg'
          key: '${{ matrix.os }}_${{ matrix.arch }}_${{ matrix.type }}_${{ env.VCPKG_COMMIT_ID }}'
    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      id: runvcpkg
      with:
        vcpkgDirectory: '${{ matrix.vcpkgBasePath }}vcpkg'
        vcpkgGitCommitId: '${{ env.VCPKG_COMMIT_ID }}'
      if: matrix.os == 'windows-latest' || matrix.os == 'macos-latest' || matrix.type == 'static'
    - name: Set environment variables
      run: $GITHUB_WORKSPACE/.github/workflows/set_environment_variables.sh "${{ matrix.os }}" "${{ matrix.type }}" "${{ matrix.arch }}" "${{ runner.workspace }}"
      shell: bash


    - uses: nuget/setup-nuget@v1
      with:
        nuget-version: '5.x'
    - name: 'Setup NuGet Credentials'
      shell: 'bash'
      run: |
        nuget sources add -source "https://nuget.pkg.github.com/jvbsl/index.json" -storepasswordincleartext -name "GitHub" -username "jvbsl" -password "${{ secrets.GITHUB_TOKEN }}"
        nuget setapikey "${{ secrets.GITHUB_TOKEN }}" -source "https://nuget.pkg.github.com/jvbsl/index.json"
      if: matrix.os == 'windows-latest' || matrix.os == 'macos-latest' || matrix.type == 'static'
    - uses: ./.github/actions/install-dependencies
      with:
          type: ${{ matrix.type }}
          os: ${{ matrix.os }}
          arch: ${{ matrix.arch }}
    - name: 'Run vcpkg'
      run: |
        ./scripts/vcpkg/get_mumble_dependencies${{ matrix.shellToUse == 'pwsh' && '.ps1' || '.sh' }} --${{ matrix.type }}
      if: matrix.os == 'windows-latest' || matrix.os == 'macos-latest' || matrix.type == 'static'
    - name: Upload error logs
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: logs
        path: |
            /Users/runner/vcpkg/buildtrees/icu/make-build-fix-rpath-x64-osx-dynamic-dbg-err.log
            /home/runner/vcpkg/buildtrees/icu/config-x64-linux-dbg-err.log
            /home/runner/vcpkg/buildtrees/icu/config-x64-linux-dbg-config.log
        if-no-files-found: warning
    - uses: ilammy/msvc-dev-cmd@v1.12.1
      if: matrix.os == 'windows-latest'
    - name: Build
      run: |
          mkdir "${{ github.workspace }}/build"
          cd "${{ github.workspace }}/build"
          # Run cmake with all necessary options
          cmake -G Ninja -S "${{ github.workspace }}" -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DBUILD_NUMBER=${{ env.MUMBLE_BUILD_NUMBER }} ${{ env.CMAKE_OPTIONS }} -DCMAKE_UNITY_BUILD=ON -Ddisplay-install-paths=ON ${{ env.ADDITIONAL_CMAKE_OPTIONS }} ${{ env.VCPKG_CMAKE_OPTIONS }}
          # Actually build
          cmake --build . --config ${{ env.BUILD_TYPE }}
      env:
          MUMBLE_BUILD_NUMBER: ${{ needs.fetch_build_number.outputs.build_number }}
    - name: Test
      working-directory: ${{ github.workspace }}/build
      shell: bash
      run: ctest --output-on-failure -C $BUILD_TYPE
